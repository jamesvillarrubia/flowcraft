name: "Pipeline"

permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  workflow_call:
    inputs:
      version:
        description: The version to deploy
        required: false
        type: string
      baseRef:
        description: The base reference for comparison
        required: false
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: The version to deploy
        required: false
        type: string
      baseRef:
        description: The base reference for comparison
        required: false
        type: string
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main
jobs:

  
  #=============================================================================
  # CHANGES DETECTION
  #=============================================================================
  changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/detect-changes
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}
  test-core:
    needs: changes
    if: needs.changes.outputs.core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test:run

      - name: Build
        run: pnpm build

  #=============================================================================
  # VERSIONING
  #=============================================================================
  version:
    if: github.ref_name == 'develop'
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/calculate-version
        id: calculate-version
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}
    outputs:
      nextVersion: ${{ steps.calculate-version.outputs.version }}

  #=============================================================================
  # TAG & PROMOTE
  #=============================================================================
  tag:
    if: github.ref_name == 'develop'
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/create-tag
        with:
          version: ${{ needs.version.outputs.nextVersion }}

  #=============================================================================
  # PROMOTION JOB
  #=============================================================================
  promote:
    # Only runs on push events (not PRs) to branches that can promote
    # Waits for version/tag if they run, but doesn't fail if they're skipped
    if: |
      ${{
        always() &&
        github.event_name == 'push' &&
        (github.ref_name == 'develop' || github.ref_name == 'staging') &&
        needs.version.result != 'failure' &&
        needs.tag.result != 'failure'
      }}
    needs: [ changes, version, tag ]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: ./.github/actions/promote-branch
        with:
          sourceBranch: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
