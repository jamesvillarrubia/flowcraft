name: "Pipeline"
on:
  workflow_call:
    inputs:
      version:
        description: The version to deploy
        required: false
        type: string
      baseRef:
        description: The base reference for comparison
        required: false
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: The version to deploy
        required: false
        type: string
      baseRef:
        description: The base reference for comparison
        required: false
        type: string
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main
jobs:
  changes:
    ## =============================================================================
    #        # CHANGES DETECTION
    #        # =============================================================================
    runs-on: ubuntu-latest
    outputs:
      core: ${{ steps.detect.outputs.core }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/detect-changes
        id: detect
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}

  ## =============================================================================
  #        # TESTING JOBS
  #        # =============================================================================
  test-core:
    needs: changes
    if: needs.changes.outputs.core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test:run

      - name: Build
        run: pnpm build

  version:
    ## =============================================================================
    #        # VERSIONING
    #        # =============================================================================
    if: github.ref_name == 'develop'
    needs: [changes, test-core]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/calculate-version
        id: calculate-version
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}
    outputs:
      nextVersion: ${{ steps.calculate-version.outputs.nextVersion }}
  tag:
    ## =============================================================================
    #        # TAG & CREATE PR
    #        # =============================================================================
    if: github.ref_name == 'develop'
    needs: version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/create-tag
        with:
          version: ${{ needs.version.outputs.nextVersion }}
          token: ${{ secrets.GITHUB_TOKEN }}

  createpr:
    ## SHOULD BE ANY BRANCH EXCEPT the final branch
    if: github.ref_name != 'main'
    needs: [ changes, version ]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/create-pr
        with:
          sourceBranch: ${{ github.ref_name }}
          targetBranch: ${{ github.ref_name == 'develop' && 'staging' || github.ref_name == 'staging' && 'main' || 'main' }}
          title: 'Release ${{ needs.version.outputs.nextVersion }}'
          body: 'Automated release PR for version ${{ needs.version.outputs.nextVersion }}'
          token: ${{ secrets.GITHUB_TOKEN }}

  branch:
    ## SHOULD BE THE NEXT BRANCH
    needs: createpr
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/manage-branch
        with:
          action: 'fast-forward'
          targetBranch: ${{ github.ref_name == 'develop' && 'staging' || github.ref_name == 'staging' && 'main' || 'main' }}
          sourceBranch: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
