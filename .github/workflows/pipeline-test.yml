name: "Pipeline"

on:
  pull_request:
    branches:
      - develop
      - staging
      - main

  workflow_call:

    inputs:
      version:
        description: 'The version to deploy'
        required: false
        type: string
      baseRef:
        description: 'The base reference for comparison'
        required: false
        type: string

  workflow_dispatch:
    inputs:
      version:
        description: 'The version to deploy'
        required: false
        type: string
      baseRef:
        description: 'The base reference for comparison'
        required: false
        type: string

jobs:

  # =============================================================================
  # CHANGES DETECTION
  # =============================================================================
  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/detect-changes
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}

  # =============================================================================
  # TESTING JOBS
  # =============================================================================
  # Add your testing jobs here
  # Example:
  # test-api: 
  #   needs: branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test API
  #       run: |
  #         echo "Run API tests"
  #
  # test-web:
  #   needs: branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test Web
  #       run: |
  #         echo "Run Web tests"

  # =============================================================================
  # VERSIONING
  # =============================================================================
  version:
    if: github.ref_name == 'develop'
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/calculate-version
        with:
          baseRef: ${{ inputs.baseRef || 'main' }}

  # =============================================================================
  # DEPLOYMENT JOBS
  # =============================================================================
  # Add your deployment jobs here
  # Example:
  # deploy-api:
  #   needs: branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy API
  #       run: |
  #         echo "Deploy API to production"
  #
  # deploy-web:
  #   needs: branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy Web
  #       run: |
  #         echo "Deploy Web to production"
  #

  # =============================================================================
  # TAG & CREATE PR
  # =============================================================================     
  tag:
    if: github.ref_name == 'develop'
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/create-tag
        with:
          version: ${{ needs.version.outputs.nextVersion }}

  createpr:
    ## SHOULD BE ANY BRANCH EXCEPT the final branch
    if: github.ref_name != 'main'
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/create-pr
        with:
          sourceBranch: ${{ github.ref_name }}
          targetBranch: ${{ github.ref_name == 'develop' && 'staging' || github.ref_name
            == 'staging' && 'main' || github.ref_name == 'main' && 'main' ||
            'main' }}
          title: 'Release ${{ needs.version.outputs.nextVersion }}'
          body: 'Automated release PR for version ${{ needs.version.outputs.nextVersion
            }}'

  branch:
    ## SHOULD BE THE NEXT BRANCH
    needs: createpr
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/manage-branch
        with:
          action: 'fast-forward'
          targetBranch: ${{ github.ref_name == 'develop' && 'staging' || github.ref_name
            == 'staging' && 'main' || github.ref_name == 'main' && 'main' ||
            'main' }}
          sourceBranch: ${{ github.ref_name }}
