name: "Changes"

on:
  workflow_call:
    outputs:
      api: 
        value: ${{ jobs.changes.outputs.api }}
      web: 
        value: ${{ jobs.changes.outputs.web }}
      libs: 
        value: ${{ jobs.changes.outputs.libs }}
      cicd: 
        value: ${{ jobs.changes.outputs.cicd }}
      
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      api: ${{ steps.merge.outputs.api }}
      web: ${{ steps.merge.outputs.web }}
      libs: ${{ steps.merge.outputs.libs }}
      cicd: ${{ steps.merge.outputs.cicd }}
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set Base Branch
      id: set-base
      ## Updated 3-branch flow: develop → staging → main
      ## Each branch compares to the next in the flow
      run: |
        case '${{ github.ref }}' in
          'refs/heads/develop')
            base_branch='staging'
            ;;
          'refs/heads/staging')
            base_branch='main'
            ;;
          *)
            base_branch='develop'
            ;;
        esac
        echo "Base branch determined: $base_branch"
        echo "base_branch=$base_branch" >> $GITHUB_ENV
        echo "base_branch=$base_branch" >> $GITHUB_OUTPUT

    - name: Install Git
      run: |
        apt-get update
        apt-get install -y git

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.set-base.outputs.base_branch }}
        filters: |
          api:
            - 'apps/api/**'
          web:
            - 'apps/web/**'
          libs:
            - 'libs/**'
          cicd:
            - '.github/workflows/**'

    - name: Merge filter outputs with branch condition
      id: merge
      run: |
        # Force full deployment on main, staging, and test branches
        echo "api=${{ contains(steps.filter.outputs.changes, 'api') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/test' }}" >> $GITHUB_OUTPUT
        echo "web=${{ contains(steps.filter.outputs.changes, 'web') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/test' }}" >> $GITHUB_OUTPUT
        echo "libs=${{ contains(steps.filter.outputs.changes, 'libs') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/test' }}" >> $GITHUB_OUTPUT
        echo "cicd=${{ contains(steps.filter.outputs.changes, 'cicd') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/test' }}" >> $GITHUB_OUTPUT

    - name: Debug Paths Filter Outputs
      run: |
        echo "API: ${{ steps.merge.outputs.api }}"
        echo "WEB: ${{ steps.merge.outputs.web }}"
        echo "LIBS: ${{ steps.merge.outputs.libs }}"
        echo "CICD: ${{ steps.merge.outputs.cicd }}"